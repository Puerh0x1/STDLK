// ============================================
// INSTANT LOAD - –ú–ì–ù–û–í–ï–ù–ù–ê–Ø –ó–ê–ì–†–£–ó–ö–ê –ë–ï–ó –ú–ï–†–¶–ê–ù–ò–Ø
// ============================================

// –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å—Ç–∏–ª–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è FOUC (Flash of Unstyled Content)
const criticalCSS = `
    /* –°–∫—Ä—ã–≤–∞–µ–º –≤—Å—ë –¥–æ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ */
    html {
        visibility: hidden;
        opacity: 0;
    }
    
    /* –ë–∞–∑–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ç–µ–º—ã */
    :root {
        --primary: #6366f1;
        --bg-primary: #ffffff;
        --bg-secondary: #f8fafc;
        --text-primary: #0f172a;
        --border-color: #e2e8f0;
        --transition-base: 250ms;
    }
    
    [data-theme="dark"] {
        --primary: #818cf8;
        --bg-primary: #0f172a;
        --bg-secondary: #1e293b;
        --text-primary: #f1f5f9;
        --border-color: #334155;
    }
    
    /* –ü—Ä–µ–ª–æ–∞–¥–µ—Ä –≤—Å–µ–≥–¥–∞ –≤–∏–¥–∏–º */
    .instant-preloader {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: var(--bg-primary);
        z-index: 999999;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: opacity 0.4s ease, transform 0.4s ease;
    }
    
    .instant-preloader.ready {
        opacity: 0;
        transform: scale(0.95);
        pointer-events: none;
    }
    
    .instant-preloader-content {
        text-align: center;
    }
    
    .instant-preloader-logo {
        width: 80px;
        height: 80px;
        margin: 0 auto 1.5rem;
        position: relative;
    }
    
    .instant-preloader-spinner {
        position: absolute;
        width: 100%;
        height: 100%;
        border: 3px solid var(--border-color);
        border-top-color: var(--primary);
        border-radius: 50%;
        animation: instantSpin 0.8s linear infinite;
    }
    
    .instant-preloader-icon {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        font-size: 2rem;
        color: var(--primary);
    }
    
    .instant-preloader-text {
        color: var(--text-primary);
        font-size: 0.9rem;
        opacity: 0.6;
        font-family: system-ui, -apple-system, sans-serif;
    }
    
    @keyframes instantSpin {
        to { transform: rotate(360deg); }
    }
    
    /* –°–æ—Å—Ç–æ—è–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ */
    html.dom-ready {
        visibility: visible;
        opacity: 1;
        transition: opacity 0.3s ease;
    }
    
    /* –ü–ª–∞–≤–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ */
    body {
        opacity: 0;
        transition: opacity 0.3s ease;
    }
    
    body.content-ready {
        opacity: 1;
    }
`;

// –í—Å—Ç–∞–≤–ª—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å—Ç–∏–ª–∏ –≤ head –∫–∞–∫ –º–æ–∂–Ω–æ —Ä–∞–Ω—å—à–µ
(function() {
    // –°–æ–∑–¥–∞–µ–º —Å—Ç–∏–ª–∏
    const style = document.createElement('style');
    style.textContent = criticalCSS;
    document.head.insertBefore(style, document.head.firstChild);
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Ç–µ–º—É —Å—Ä–∞–∑—É
    const savedTheme = localStorage.getItem('modern-theme') || 'light';
    document.documentElement.setAttribute('data-theme', savedTheme);
    
    // –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–ª–æ–∞–¥–µ—Ä
    const preloader = document.createElement('div');
    preloader.className = 'instant-preloader';
    preloader.innerHTML = `
        <div class="instant-preloader-content">
            <div class="instant-preloader-logo">
                <div class="instant-preloader-spinner"></div>
                <div class="instant-preloader-icon">üé≠</div>
            </div>
            <div class="instant-preloader-text">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
        </div>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–ª–æ–∞–¥–µ—Ä –≤ –Ω–∞—á–∞–ª–æ body
    if (document.body) {
        document.body.insertBefore(preloader, document.body.firstChild);
    } else {
        document.addEventListener('DOMContentLoaded', () => {
            document.body.insertBefore(preloader, document.body.firstChild);
        });
    }
})();

// ============================================
// –ú–ï–ù–ï–î–ñ–ï–† –ó–ê–ì–†–£–ó–ö–ò –°–¢–†–ê–ù–ò–¶–´
// ============================================

class InstantLoadManager {
    constructor() {
        this.resourcesLoaded = false;
        this.domReady = false;
        this.animationReady = false;
        this.init();
    }
    
    init() {
        // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ DOM
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', () => this.onDOMReady());
        } else {
            this.onDOMReady();
        }
        
        // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤—Å–µ—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
        window.addEventListener('load', () => this.onResourcesLoaded());
        
        // –¢–∞–π–º–∞—É—Ç –Ω–∞ —Å–ª—É—á–∞–π –∑–∞–≤–∏—Å–∞–Ω–∏—è
        setTimeout(() => this.forceShow(), 3000);
        
        // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ—Å—É—Ä—Å—ã
        this.preloadCriticalResources();
    }
    
    onDOMReady() {
        this.domReady = true;
        document.documentElement.classList.add('dom-ready');
        this.checkReadyState();
    }
    
    onResourcesLoaded() {
        this.resourcesLoaded = true;
        this.checkReadyState();
    }
    
    checkReadyState() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å—ë –ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
        if (this.domReady && this.resourcesLoaded && !this.animationReady) {
            this.showContent();
        }
    }
    
    showContent() {
        if (this.animationReady) return;
        this.animationReady = true;
        
        // –ü–ª–∞–≤–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
        requestAnimationFrame(() => {
            // –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–ª–æ–∞–¥–µ—Ä
            const preloader = document.querySelector('.instant-preloader');
            if (preloader) {
                preloader.classList.add('ready');
                setTimeout(() => preloader.remove(), 400);
            }
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
            document.body.classList.add('content-ready');
            
            // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—è–≤–ª–µ–Ω–∏—è
            this.animatePageEntrance();
        });
    }
    
    forceShow() {
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        if (!this.animationReady) {
            console.warn('Forced page show after timeout');
            this.showContent();
        }
    }
    
    animatePageEntrance() {
        // –ê–Ω–∏–º–∏—Ä—É–µ–º –ø–æ—è–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        const elements = document.querySelectorAll(
            '.sidebar-modern, .header-modern, .stat-card-modern, .activity-item-modern'
        );
        
        elements.forEach((el, index) => {
            el.style.opacity = '0';
            el.style.transform = 'translateY(20px)';
            el.style.transition = `opacity 0.4s ease ${index * 0.05}s, transform 0.4s ease ${index * 0.05}s`;
            
            requestAnimationFrame(() => {
                el.style.opacity = '';
                el.style.transform = '';
            });
        });
    }
    
    preloadCriticalResources() {
        // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ—Å—É—Ä—Å—ã
        const criticalResources = [
            '/assets/css/modern-theme-fixed.css',
            '/assets/js/modern-theme-improved.js',
            'https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap'
        ];
        
        criticalResources.forEach(url => {
            const link = document.createElement('link');
            link.rel = 'preload';
            link.as = url.endsWith('.css') ? 'style' : 'script';
            link.href = url;
            document.head.appendChild(link);
        });
    }
}

// ============================================
// –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –ü–ï–†–ï–•–û–î–´
// ============================================

class OptimizedTransitions {
    constructor() {
        this.init();
    }
    
    init() {
        this.interceptLinks();
        this.optimizeImages();
    }
    
    interceptLinks() {
        document.addEventListener('click', (e) => {
            const link = e.target.closest('a[href]');
            if (!link) return;
            
            const href = link.getAttribute('href');
            if (!href || href.startsWith('#') || href.startsWith('http') || href.startsWith('mailto')) return;
            
            e.preventDefault();
            this.navigateWithTransition(href);
        });
    }
    
    async navigateWithTransition(href) {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        const currentTheme = document.documentElement.getAttribute('data-theme');
        localStorage.setItem('modern-theme', currentTheme);
        
        // –°–æ–∑–¥–∞–µ–º –æ–≤–µ—Ä–ª–µ–π –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞
        const overlay = document.createElement('div');
        overlay.style.cssText = `
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: var(--bg-primary);
            z-index: 999999;
            opacity: 0;
            transition: opacity 0.2s ease;
        `;
        document.body.appendChild(overlay);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–≤–µ—Ä–ª–µ–π
        requestAnimationFrame(() => {
            overlay.style.opacity = '1';
        });
        
        // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        const response = await fetch(href);
        const html = await response.text();
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
        const parser = new DOMParser();
        const newDoc = parser.parseFromString(html, 'text/html');
        
        // –ü–µ—Ä–µ–Ω–æ—Å–∏–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å—Ç–∏–ª–∏
        const criticalStyle = document.createElement('style');
        criticalStyle.textContent = criticalCSS;
        newDoc.head.insertBefore(criticalStyle, newDoc.head.firstChild);
        
        // –ó–∞–º–µ–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π –¥–æ–∫—É–º–µ–Ω—Ç
        setTimeout(() => {
            document.documentElement.innerHTML = newDoc.documentElement.innerHTML;
            
            // –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∫—Ä–∏–ø—Ç—ã
            const scripts = document.querySelectorAll('script');
            scripts.forEach(script => {
                if (script.src) {
                    const newScript = document.createElement('script');
                    newScript.src = script.src;
                    script.parentNode.replaceChild(newScript, script);
                }
            });
            
            // –û–±–Ω–æ–≤–ª—è–µ–º URL
            window.history.pushState({}, '', href);
            
            // –ó–∞–ø—É—Å–∫–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            new InstantLoadManager();
        }, 200);
    }
    
    optimizeImages() {
        // –õ–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        const images = document.querySelectorAll('img[data-src]');
        
        if ('IntersectionObserver' in window) {
            const imageObserver = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        const img = entry.target;
                        img.src = img.dataset.src;
                        img.removeAttribute('data-src');
                        imageObserver.unobserve(img);
                    }
                });
            });
            
            images.forEach(img => imageObserver.observe(img));
        }
    }
}

// ============================================
// –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø
// ============================================

// –ó–∞–ø—É—Å–∫–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
const instantLoadManager = new InstantLoadManager();

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
        new OptimizedTransitions();
    });
} else {
    new OptimizedTransitions();
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
window.InstantLoadManager = InstantLoadManager;
window.OptimizedTransitions = OptimizedTransitions;